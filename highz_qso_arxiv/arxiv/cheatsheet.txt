# choose branch
git fetch --all
(optional) git pull
git checkout lris_mark4_2022
python setup.py install
python setup.py develop

# in ./LRIS_220127/.
pypeit_setup -s keck_lris_red_mark4 -r ./raw_red/. -d ./reduced_red/. -c all 

# in ./LRIS_220127/reduced_red/test_run/.
open QA/MF_A.html

# in ./LRIS_220127/reduced_red/test_run/.
pypeit_show_1dspec --help
# in ./LRIS_220127/reduced_red/test_run/.
pypeit_show_1dspec --list Science/spec1d_r220127_00081-J0759+2811_OFF_LRISr_20220127T093434.032.fits
# in ./LRIS_220127/reduced_red/test_run/.
pypeit_show_1dspec --exten 2 Science/spec1d_r220127_00081-J0759+2811_OFF_LRISr_20220127T093434.032.fits

# in ./LRIS_220127/reduced_red/test_run/.
run_pypeit keck_lris_red_mark4_A.pypeit -o

# generating flux calibration 
pypeit_sensfunc Science/spec1d_r220127_00126-GD153_LRISr_20220127T161145.312.fits -s sensfunc.par -o GD153_IR_sens.fits --debug

# fluxing 
pypeit_flux_calib flux_file.txt
pypeit_show_1dspec --flux Science/spec1d_r220127_00126-GD153_LRISr_20220127T161145.312.fits &

# This setups PypeIt files for fluxing, coadding, and telluric corrections. 
# It will produce three files named as:
# - your_spectragraph.flux
# - your_spectragraph.coadd1d
# - your_spectragraph.tell
pypeit_flux_setup Science

# add flux calibration to .flux
# include only the coadd source in .coadd1d (make a new file)
# don't do telluric calibration for quasar candidate

# flux
pypeit_flux_calib keck_lris_red_mark4.flux

# coadd
# need finding chart! (for editing .coadd1d file)
pypeit_coadd_1dspec J0759+2811.coadd1d --show
# rename output to .fits
pypeit_show_1dspec J0759+2811_coadd.fits
# or
pypeit_help_onedplot.py J0759+2811_coadd.fits

# quick look
pypeit_ql_keck_lris --writefits --master_dir /Users/topol/workspace/engima/LRIS_QL_MASTERS/ /Users/topol/workspace/engima/data_reduction/LRIS_220127/raw_red/ r220127_00081.fits

# pypeit view (for checking dithering pattern)
pypeit_view_fits keck_mosfire MF.20191119.41106.fits.gz --bkg_file MF.20191119.41319.fits.gz --proc 